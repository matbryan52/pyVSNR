# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: DEV
        required: true

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        os: [ubuntu-20.04, windows-2019]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install CUDA
      uses: Jimver/cuda-toolkit@v0.2.8
      with:
        cuda: 11.6.2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools build
    - if: ${{ matrix.os == 'ubuntu-20.04'}}
      name: Build shared library (linux)
      run:
        nvcc -lcufft -lcublas --compiler-options '-fPIC' -o pyVSNR/libvsnr2d.so --shared pyVSNR/vsnr2d.cu
      env:
        PLATFORM_KEY: linux_x86_64
    - if: ${{ matrix.os == 'windows-2019'}}
      name: Build shared library (windows)
      run:
        nvcc -lcufft -lcublas -o pyVSNR/libvsnr2d.dll --shared pyVSNR/vsnr2d.cu
      env:
        PLATFORM_KEY: win_amd_64        
    - name: Build package
      run:
        python -m build
    - if: ${{ matrix.os == 'ubuntu-20.04'}}
      name: Rename package (linux)    
      run:
        rename -n 's/any/linux_x86_64/' dist/*.whl
    - if: ${{ matrix.os == 'windows-2019'}}
      name: Build shared library (windows)
      run:
        dir | rename-item -NewName {$_.name -replace 'any','win_amd_64'}
    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: package-upload
        path: |
          dist
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
